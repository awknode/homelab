# settings -> actions -> Workflow permissions = read/write
name: track upstream versions
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 10 * * *'
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  scanning:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        repo:
          # - github_user: authelia
          #   github_repo: authelia
          #   image: authelia/authelia
          #   release: v4.37.5
          #   dockertag: master
          #   type: releases/latest | jq ".tag_name"
          #   # https://charts.authelia.com/

          - github_user: cert-manager
            github_repo: cert-manager
            image: quay.io/jetstack/cert-manager-cainjector
            release: v1.11.0
            dockertag: v1.11.0
            type: releases/latest | jq ".tag_name"

          # - github_user: cert-manager
          #   github_repo: cert-manager
          #   image: quay.io/jetstack/cert-manager-controller
          #   release: v1.11.0
          #   dockertag: v1.11.0
          #   type: releases/latest | jq ".tag_name"

          # - github_user: cert-manager
          #   github_repo: cert-manager
          #   image: quay.io/jetstack/cert-manager-webhook
          #   release: v1.11.0
          #   dockertag: v1.11.0
          #   type: releases/latest | jq ".tag_name"

          # - github_user: nginxinc
          #   github_repo: kubernetes-ingress
          #   image: nginx/nginx-ingress
          #   release: v3.0.2
          #   dockertag: edge-alpine
          #   type: releases/latest | jq ".tag_name"

          # # https://artifacthub.io/packages/helm/bitnami-labs/sealed-secrets
          # - github_user: bitnami-labs
          #   github_repo: sealed-secrets
          #   image: bitnami/sealed-secrets-controller
          #   release: v0.19.5
          #   dockertag: v0.19.5
          #   type: releases/latest | jq ".tag_name"

          # - github_user: democratic-csi
          #   github_repo: charts
          #   image: loeken/democratic-csi
          #   release: democratic-csi-0.13.5
          #   dockertag: v1.7.7
          #   type: releases/latest | jq ".tag_name"

          # - github_user: home-assistant
          #   github_repo: core
          #   image: loeken/home-assistant
          #   release: 2023.3.3
          #   dockertag: 2023.3.3
          #   type: releases/latest | jq ".tag_name"

          # - github_user: jellyfin
          #   github_repo: jellyfin
          #   image: loeken/jellyfin
          #   release: v10.8.9
          #   dockertag: 10.8.9
          #   type: releases/latest | jq ".tag_name"

          # - github_user: Fallenbagel
          #   github_repo: jellyseerr
          #   image: loeken/jellyseerr
          #   release: v1.4.1
          #   dockertag: 1.4.1
          #   type: releases/latest | jq ".tag_name"

          # # https://hub.docker.com/_/nextcloud/tags?page=1&name=alpine
          # # https://artifacthub.io/packages/helm/nextcloud/nextcloud
          # - github_user: nextcloud
          #   github_repo: helm
          #   image: library/nextcloud
          #   release: nextcloud-3.5.3
          #   dockertag: 25.0.4-fpm-alpine
          #   type: releases/latest | jq ".tag_name"

          # - github_user: nzbget
          #   github_repo: nzbget
          #   image: loeken/nzbget
          #   release: v21.1
          #   dockertag: version-v21.1
          #   type: releases/latest | jq ".tag_name"

          # # linuxserver seems to a bit behind on this one
          # - github_user: Prowlarr
          #   github_repo: Prowlarr
          #   image: loeken/prowlarr
          #   release: v1.3.1.2796
          #   # https://hub.docker.com/r/linuxserver/prowlarr/tags?page=1&name=develop-version
          #   dockertag: develop-version-1.3.1.2796
          #   type: tags | jq ".[0].name"

          # - github_user: Radarr
          #   github_repo: Radarr
          #   image: loeken/radarr
          #   release: v4.3.2.6857
          #   dockertag: version-4.3.2.6857
          #   type: releases/latest | jq ".tag_name"

          # - github_user: jesec
          #   github_repo: flood
          #   image: loeken/rtorrent-flood
          #   release: v4.7.0
          #   dockertag: 4.7.0
          #   type: releases/latest | jq ".tag_name"

          # - github_user: Sonarr
          #   github_repo: Sonarr
          #   image: loeken/sonarr
          #   release: v3.0.9.1549
          #   dockertag: release-3.0.9.1549
          #   type: tags | jq -r '.[0].name'

          # - github_user: dani-garcia
          #   github_repo: vaultwarden
          #   image: loeken/vaultwarden
          #   release: 1.27.0
          #   dockertag: 1.27.0-alpine
          #   type: releases/latest | jq ".tag_name"

          # - github_user: traefik
          #   github_repo: whoami
          #   image: traefik/whoami
          #   release: v1.8.7
          #   dockertag: v1.8.7
          #   type: releases/latest | jq ".tag_name"

    steps:
      - id: release
        run: echo RELEASE_VERSION=`curl -sSL --user loeken:${{ secrets.GITHUB_TOKEN }} https://api.github.com/repos/${{ matrix.repo.github_user }}/${{ matrix.repo.github_repo }}/${{ matrix.repo.type }}` >> $GITHUB_ENV

      - name: print versions compared
        run: echo ${{ env.RELEASE_VERSION }} != ${{ matrix.repo.release }}

      - name: report version missmatch
        run: |
          RV=`echo $RELEASE_VERSION | sed 's/"//g'`
          if [ $RV = ${{ matrix.repo.release }} ]; then
            echo "same"
          else
            echo "diff"
            exit 1
          fi

      - name: report version missmatch
        if: always()
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "${{ matrix.repo.image }} {workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
          notify_when: "failure"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.repo.image }}:${{ matrix.repo.dockertag }}
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
          format: 'table'
          timeout: 10m


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.repo.image }}:${{ matrix.repo.dockertag }}
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          # format: 'table'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.repo.github_repo }}.sarif'
          timeout: 10m

      - name: upload 
        run: ls -la


      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.repo.github_repo }}.sarif'
          token: ${{ secrets.GITHUB_TOKEN }}
          category: ${{ matrix.repo.github_repo }}

      - name: report scanner result
        if: always()
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "${{ matrix.repo.image }} {workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
          notify_when: "failure"
